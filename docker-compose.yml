services:
  backend:
    build: ./backend
    ports:
      - "3000:3000"
    depends_on:
      - postgres
      - kafka
    environment:
      - NODE_ENV=production
      - KAFKA_BROKER=localhost:9092

  postgres:
    image: postgres:15
    environment:
      POSTGRES_USER: mag
      POSTGRES_PASSWORD: magpass
      POSTGRES_DB: magdb
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql

  python-service:
    build: ./python-service
    ports:
      - "5000:5000"
    depends_on:
      - postgres

  zookeeper:
    image: confluentinc/cp-zookeeper:7.6.1
    ports:
      - "2181:2181"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes

  kafka:
    image: confluentinc/cp-kafka:7.6.1
    ports:
      - "9092:9092"        # host access
      - "9093:9093"        # container-to-container (optional)
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_LISTENERS=PLAINTEXT://:9092
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://localhost:9092
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      # If you will produce/consume from the host (Windows), use dual listeners:
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,DOCKER://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://localhost:9092,DOCKER://kafka:9093
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,DOCKER:PLAINTEXT

      - KAFKA_CFG_PROCESS_ROLES=broker
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@localhost:9093
    depends_on:
      - zookeeper

  spark-master:
    image: apache/spark:3.5.2
    environment:
      - SPARK_MODE=master
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no
    ports:
      - "7077:7077"   # spark master RPC
      - "8080:8080"   # spark master UI
    depends_on:
      - kafka
    volumes:
      - ./spark/jobs:/opt/spark/jobs

  spark-worker-1:
    image: apache/spark:3.5.2
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark-master:7077
    depends_on:
      - spark-master
    ports:
      - "8081:8081"

  spark-worker-2:
    image: apache/spark:3.5.2
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark-master:7077
    depends_on:
      - spark-master

volumes:
  pgdata:
